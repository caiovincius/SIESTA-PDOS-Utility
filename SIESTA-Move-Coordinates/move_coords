#!/bin/bash

#What does this script do?
#First, it will read your input (.fdf file) to identify the numeration of each atomic specie.
#Then, it will replace each atomic specie name inside the .xyz file with its corresponding numeration from the .fdf file.
#Next, it will move all the coordinates from the .xyz to your .fdf file, automatically.
#Additionally, it can change the NumberOfAtoms, NumberOfSpecies and the SystemLabel of the .fdf with the correct values obtained from your .xyz file.
#REQUIREMENTS:
#The name of the pseudopotentials in the block: "%block ChemicalSpeciesLabel" in your * .fdf file must be in one of the following formats: Atom_gga, Atom_lda, or Atom. Ex.: Fe_gga, Fe_lda, Fe.

#USAGE:
#Copy the move_coords to the folder to the same folder of your .fdf file and .xyz file
#In the first time you use this script, type the following command before: chmod +x extract_coords
#Type in the terminal: ./move_coords filename1.fdf filename2.xyz (Alternative mode: ./move_coords filename1.xyz filename2.fdf
#After that, the coordinates will be moved to the .fdf file, and then, some more options will appear (They are explained below).

#By: Caio VinÃ­cius C. R. da Silva - caioviniciuscaetano@hotmail.com

helpFunction()
{
echo -e " ${nome_xyz_cut}? (Y)Yes (N)No"
echo " ${nome_xyz_cut}? (Y)Yes (N)No"
echo "Change the NumberOfAtoms in ${arquivo_fdf} with the correct number of atoms from ${nome_xyz}? (Y)Yes (N)No"
echo "Change the NumberOfSpecies in ${arquivo_fdf} with the correct number of species from ${nome_xyz}? (Y)Yes (N)No"
   echo -e "WHAT DOES THIS TOOL DO:\nFirst, it will read your input (.fdf file) to identify the numeration of each atomic specie.\nThen, it will replace each atomic specie name inside the .xyz file with its corresponding numeration from the .fdf file.\nNext, it will move all the coordinates from the .xyz to your .fdf file, automatically.\nAdditionally, it can change the NumberOfAtoms, NumberOfSpecies and the SystemLabel of the .fdf with the correct values obtained from your .xyz"
   echo -e "\nUSAGE:\nCopy the move_coords to the folder to the same folder of your .fdf file and .xyz file.\nIn the first time you use this script, type the following command before: chmod +x extract_coords.\nType in the terminal: ./move_coords filename1.fdf filename2.xyz \nAlternative mode: ./move_coords filename1.xyz filename2.fdf.\Then, follow the interative options that appear."
   echo -e "\nREQUIREMENTS:\nThe name of the pseudopotentials in the block: '%block ChemicalSpeciesLabel' in your * .fdf file must be in one of the following formats: Atom_gga, Atom_lda, or Atom. Ex.: Fe_gga, Fe_lda, Fe."
   echo -e "\nOPTIONS:\n-l or --label: Change the SystemLabel with the .xyz filename.\n-r or --rename: Rename the .fdf file with the .xyz filename.\n-a or --atoms: Change the NumberOfAtoms in .fdf file with the correct number of ATOMS from the .xyz file.\n-s or --species: Change the NumberOfSpecies in .fdf file with the correct number of SPECIES from the .xyz file.\n-h or --help: Show the help.\n-V or --version: Show the version."
   echo -e "\nEXAMPLE:\n./move_coords filename1.fdf filename2.xyz -l -r -a -s"
   exit 1 # Exit script after printing help
}
label=0
rename=0	
n_atoms=0
n_species=0
for arg in "$@"
do
	ext=`echo $arg | cut -f2 -d"."`
	if [[ ${ext} == "fdf" ]]; then
		arquivo_fdf=$arg
		shift
	elif [[ ${ext} == "xyz" ]]; then
		nome_xyz=$arg
		shift
	fi
    case $arg in
    -V | --version )
      echo 1.7
	  exit
    ;;	
	-l | --label )
	label=1	
	shift
	shift
      ;;
	-r | --rename )
	rename=1	
	shift
	shift
      ;;
     -a | --atoms )
	n_atoms=1	
	shift
	shift
      ;;	  
	-s | --species )
	n_species=1	
	shift
	shift
      ;;
	-h | --help )
	helpFunction 
	;;  
  esac
done

ext1=`echo $arquivo_fdf | cut -f2 -d"."`
ext2=`echo $nome_xyz | cut -f2 -d"."`

if [[ $arquivo_fdf == "*.fdf" || $nome_xyz == "*.xyz" ]];then
  if [[ $arquivo_fdf == "*.fdf" ]]; then
    fdf=(`find *.fdf`)
    if [ ${#fdf[*]} -gt 1 ];then
       echo -e "\nERROR: More than one .fdf file found. \nPlease enter the full filename or remove one of the .fdf files in this folder"
  	   exit
	elif [ ${#fdf[*]} -eq 0 ];then
       echo -e "\nERROR: No .fdf files found"
	   exit  
    fi
  fi

  if [[ $nome_xyz == "*.xyz" ]]; then
    xyz=(`find *.xyz`)
    echo ${#xyz[*]}
    if [ ${#xyz[*]} -gt 1 ];then
       echo -e "\nERROR: More than one .xyz file found. \nPlease enter the full filename or remove one of the .xyz files in this folder"
	   exit
	elif [ ${#xyz[*]} -eq 0 ];then
       echo -e "\nERROR: No .xyz files found"
	   exit    
    fi
  fi
else
  fdf=(`find $arquivo_fdf`)
  xyz=(`find $nome_xyz`)
  if [ ${#fdf[*]} -eq 0 ];then
     echo -e "\nERROR: No" $arquivo_fdf "found"
	 exit
  fi
  if [ ${#xyz[*]} -eq 0 ];then
     echo -e "\nERROR: No" $nome_xyz "found"
	 exit
  fi
  if [[ $ext1 == "xyz" && $ext2 == "fdf" ]]; then
		move=$arquivo_fdf
		arquivo_fdf=$nome_xyz
		nome_xyz=$move
		echo "Moving the atoms column"		
  elif [[ $ext1 == "fdf" && $ext2 == "xyz" ]]; then		
		echo "Moving the atoms column"
  else	
	echo "Extension not supported. Use only .fdf or .xyz files"
	echo -e "\nHow to use: ./move_coords file1.fdf file2.xyz \nAlternative mode: ./move_coords file1.xyz file2.fdf"
	exit
  fi
fi


awk '{print $2" "$3" "$4}' $nome_xyz > coordenadas1
awk '{print " "$1" "}' $nome_xyz > coordenadas2
paste coordenadas1 coordenadas2 > coordenada

chemicalspecies1=`grep -n ChemicalSpeciesLabel $arquivo_fdf | cut -f1 -d":" | head -n 1 | tail -1`
chemicalspecies2=`grep -n ChemicalSpeciesLabel $arquivo_fdf | cut -f1 -d":" | head -n 2 | tail -1`
quant=$(( $chemicalspecies2 - $chemicalspecies1 - 1 ))
atomolinha=$(( $chemicalspecies1 + 1 ))

for ((i=1; i<=$quant; i++)) 
     do
	 atomo[$i]=`head -n +$atomolinha $arquivo_fdf | tail -1 | awk '{print $3}' | cut -f1 -d"_"`
	 atomo=${atomo[$i]}
	   if [ $i -gt 1 ]; then
	      for ((j=1; j<$i; j++)) 
	      do
			 atomo[$i]=`echo ${atomo[$i]} | sed 's/'${atomo[$j]}'/'$j'/'`
	      done
	   fi
	   
	   echo "Replacing" $atomo "by" $i 
	   sed -i "s/${atomo[$i]}/$i/" coordenada
	   atomolinha=$(( $atomolinha + 1 ))
done

sed -i '1d' coordenada
sed -i '1d' coordenada	 
sed -e "s/\r//g" coordenada > coordenadas

echo "Moving the xyz coordinates from ${nome_xyz} to the file ${arquivo_fdf}"
total_linhas=`wc $arquivo_fdf | awk '{print $1}'`
linha_coord1=`grep -n '%block AtomicCoordinatesAndAtomicSpecies' $arquivo_fdf | awk '{print $1}' | cut -f1 -d":" | tail -1` 
linha_coord2=`grep -n '%endblock AtomicCoordinatesAndAtomicSpecies' $arquivo_fdf | awk '{print $1}' | cut -f1 -d":" | tail -1` 
total_coord_linhas=`wc coordenadas | awk '{print $1}'`
tail -n +1 $arquivo_fdf | head -n $linha_coord1 > fdf
tail -n +1 coordenadas | head -n $total_coord_linhas >> fdf
tail -n +$linha_coord2 $arquivo_fdf | head -n $total_linhas >> fdf

nome_fdf=`find *.fdf | awk '{print $1}'`
rm -rf coordenada* $arquivo_fdf
mv fdf $nome_fdf

nome_fdf_cut=`echo $nome_fdf | cut -f1 -d"."`
nome_xyz_cut=`echo $nome_xyz | cut -f1 -d"."`

if [ $label -eq 1 ]; then
	label=`grep SystemLabel $arquivo_fdf | awk '{print $2}'`
	sed -i "s/${label}/${nome_xyz_cut}/" $arquivo_fdf
fi

if [ $n_atoms -eq 1 ]; then
	num_atom=`grep NumberOfAtoms $arquivo_fdf`
	num_atom_cut=`echo $num_atom | awk '{print $1}'`
	n_atom=`head -n +1 $nome_xyz | tail -1`
	n_atoms=`echo $num_atom_cut  $n_atom`
	sed -i "s/${num_atom}/${n_atoms}/" $arquivo_fdf
fi

if [ $n_species -eq 1 ]; then
	num_species=`grep NumberOfSpecies $arquivo_fdf`
	num_species_cut=`echo $num_species | awk '{print $1}'`
	n_species=`echo $num_species_cut  $quant`
	sed -i "s/${num_species}/${n_species}/" $arquivo_fdf
fi

if [ $rename -eq 1 ]; then
	mv $nome_fdf $nome_xyz_cut.fdf
fi

echo -e "\nIt's Done! All of your coordinates from "$nome_xyz" have been moved to file: "$arquivo_fdf
