#!/bin/bash

#What does this script do?
#This script will extract all the INITIAL COORDINATES from your .FDF or .OUT file into a .XYZ file, automatically!

#REQUIRIMENTS:
#-The pseudopotentials names must be in the form: atom, atom_gga or atom_lda, inside the "%block ChemicalSpeciesLabel".

#USAGE:
#./extract_coords filename.out --converged
#./extract_coords filename.out --initial
#./extract_coords filename.fdf

#By: Caio VinÃ­cius C. R. da Silva - caioviniciuscaetano@hotmail.com

helpFunction()
{
   echo -e "Usage:\n./extract_coords filename.out --converged\n./extract_coords filename.out --initial\n./extract_coords filename.fdf"
   echo -e "OPTIONS:\n-i or --initial: Extract the initial coordinates from the .out file.\n-c or --converged: Extract the converged coordinates from the .out file.\n-h or --help: Show the help.\n-V or --version: Show the version."
   exit 1 # Exit script after printing help
}

if [[ -z $2 ]]; then

ext1=`echo $1 | cut -f2 -d"."`
if [[ ${#ext1} -eq 3 ]]; then
	arquivo_fdf=$1
fi

while [[ "$1" =~ ^- && ! "$1" == "--" ]]; do case $1 in
  -V | --version )
    echo 1.1
    exit
    ;;
  -i | --initial )
    shift; cooordinate=0
    ;;
  -c | --converged )
    shift; cooordinate=1
    ;;
   -h | --help )
	helpFunction ;;
esac; shift; done
if [[ "$1" == '--' ]]; then shift; fi

else

ext1=`echo $1 | cut -f2 -d"."`
ext2=`echo $2 | cut -f2 -d"."`
if [[ ${#ext1} -eq 3 ]]; then
	arquivo_fdf=$1
elif [[ ${#ext2} -eq 3 ]]; then
	arquivo_fdf=$2	
fi

while [[ "$2" =~ ^- && ! "$2" == "--" ]]; do case $2 in
  -V | --version )
    echo 1.1
    exit
    ;;
  -i | --initial )
    shift; cooordinate=0
    ;;
  -c | --converged )
    shift; cooordinate=1
    ;;
   -h | --help )
	helpFunction ;;
esac; shift; done
if [[ "$2" =~ '-' ]]; then shift; fi

fi

ext=`echo $arquivo_fdf | cut -f2 -d"."`

if [[ $arquivo_fdf == "*.fdf" || $arquivo_fdf == "*.out" ]];then
  if [[ $arquivo_fdf == "*.fdf" ]]; then
    fdf=(`find *.fdf`)
    if [ ${#fdf[*]} -gt 1 ];then
       echo -e "\nERROR: More than one .fdf file found. \nPlease enter the full filename or remove one of the .fdf files in this folder"
  	   exit
	elif [ ${#fdf[*]} -eq 0 ];then
       echo -e "\nERROR: No .fdf files found"
	   exit  
    fi
  fi
  if [[ $arquivo_fdf == "*.out" ]]; then
    out=(`find *.out`)
    if [ ${#out[*]} -gt 1 ];then
       echo -e "\nERROR: More than one .fdf file found. \nPlease enter full filename or remove one of the .out files in this folder"
  	   exit
	elif [ ${#out[*]} -eq 0 ];then
       echo -e "\nERROR: No .out files found"
	   exit  
    fi
  fi

else
  fdf=(`find $arquivo_fdf`)
  if [ ${#fdf[*]} -eq 0 ];then
     echo -e "\nERROR: File" $arquivo_fdf "not found."
	 exit
  fi
  if [[ $ext == "fdf" || $ext == "out" ]]; then
	if [ $ext == "fdf" ]; then
		initial=1
		converged=0
		echo "Generating the INITIAL xyz file..."
	fi
	if [ $ext == "out" ]; then
		if [[ -z $cooordinate ]]; then
			echo "You need to specify if you want extract the initial or converged coordinates of the ${arquivo_fdf}"
			echo "How to use:"
			echo "./extract_coords file.out --initial"
			echo "./extract_coords file.out --converged"
			exit
		elif [[ $cooordinate -eq 0 ]]; then	
			initial=1
			converged=0
			echo "Generating the INITIAL xyz file..."
		elif [[ $cooordinate -eq 1 ]]; then
			initial=0
			converged=1
			echo "Generating the CONVERGED xyz file..."
		fi
	fi
  else	
	echo "Extension not supported. Use only .fdf or .out files"
	echo "How to use: ./extract_coords file.fdf or ./extract_coords file.out"
	exit
  fi
fi

if [ $initial -eq 1 ]; then
	linha_coord1=`grep -n '%block AtomicCoordinatesAndAtomicSpecies' $arquivo_fdf | awk '{print $1}' | cut -f1 -d":" | tail -1` 
	linha_coord2=`grep -n '%endblock AtomicCoordinatesAndAtomicSpecies' $arquivo_fdf | awk '{print $1}' | cut -f1 -d":" | tail -1`
	coord1=$(($linha_coord1+1))
	coord2=$(($linha_coord2-$coord1))  
	tail -n +$coord1 $arquivo_fdf | head -n $coord2 > fdf
elif [ $converged -eq 1 ]; then
	linha_coord1=`grep -n outcoor $arquivo_fdf | awk '{print $1}' | cut -f1 -d":" | tail -1` 
	linha_coord2=`grep -n coxmol $arquivo_fdf | awk '{print $1}' | cut -f1 -d":" | tail -1`
	coord1=$(($linha_coord1+1))
	coord2=$(($linha_coord2-$coord1-1))  
	tail -n +$coord1 $arquivo_fdf | head -n $coord2 > fdf		
fi

echo Moving atoms column
awk '{print " "$1" "$2" "$3}' fdf > coordenadas1
awk '{print " "$4" "}' fdf > coordenadas2


chemicalspecies1=`grep -n ChemicalSpeciesLabel $arquivo_fdf | cut -f1 -d":" | head -n 1 | tail -1`
chemicalspecies2=`grep -n ChemicalSpeciesLabel $arquivo_fdf | cut -f1 -d":" | head -n 2 | tail -1`
quant=$(( $chemicalspecies2 - $chemicalspecies1 - 1 ))
atomolinha=$(( $chemicalspecies1 + 1 ))

for ((i=1; i<=$quant; i++)) 
     do
	 atomo[$i]=`head -n +$atomolinha $arquivo_fdf | tail -1 | awk '{print $3}' | cut -f1 -d"_"`
	 atomo=${atomo[$i]}
	   if [ $i -gt 1 ]; then
	      for ((j=1; j<$i; j++)) 
	      do
			 atomo[$i]=`echo ${atomo[$i]} | sed 's/'${atomo[$j]}'/'$j'/'`
	      done
	   fi
	   
	   echo "Replacing" $i "by" $atomo 
	   sed -i "s/$i/${atomo[$i]}/" coordenadas2
	   atomolinha=$(( $atomolinha + 1 ))
done
paste coordenadas2 coordenadas1 > coordenada

n_atoms=`grep NumberOfAtoms $arquivo_fdf | awk '{print $2}'`
echo -e $n_atoms"\n" > n_atom

paste -s -d "\n" n_atom coordenada > coordenadas

fdf=`find $arquivo_fdf | cut -f1 -d"."`	 

if [ $initial -eq 1 ]; then
	sed -e "s/\r//g" coordenadas > initial-$fdf.xyz
	echo -e "\nIt's Done! All INITIAL coordinates of file "$arquivo_fdf" have been moved to file: "initial-$fdf.xyz
elif [ $converged -eq 1 ]; then
	sed -e "s/\r//g" coordenadas > converged-$fdf.xyz
	echo -e "\nIt's Done! All CONVERGED coordinates of file "$arquivo_fdf" have been moved to file: "converged-$fdf.xyz
fi

rm -rf coordenada* n_atom fdf
